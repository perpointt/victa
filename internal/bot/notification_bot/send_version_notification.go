package notification_bot

import (
	"fmt"
	"strings"
	"victa/internal/domain"
)

// SendVersionNotification –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏.
func (bot *Bot) SendVersionNotification(info domain.ReleaseInfo) {
	text := bot.buildNewVersionText(info)
	_ = bot.SendMessage(bot.NewHtmlMessage(bot.chatID, text))
}

// buildNewVersionText —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–π –≤–µ—Ä—Å–∏–∏.
func (bot *Bot) buildNewVersionText(info domain.ReleaseInfo) string {
	var b strings.Builder
	b.Grow(256)

	var title string
	switch info.Store {
	case domain.StoreGooglePlay:
		title = "ü§ñ Google Play"
	case domain.StoreAppStore:
		title = "üçè App Store"
	default:
		title = string(info.Store)
	}

	b.WriteString(fmt.Sprintf("üîî <b>–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –≤ %s</b>\n", bot.Escape(title)))

	versionLine := fmt.Sprintf("‚Ä¢ <b>–í–µ—Ä—Å–∏—è:</b> %s+%d", bot.Escape(info.Semantic), info.Code)
	b.WriteString(versionLine)
	b.WriteString("\n")

	b.WriteString(fmt.Sprintf("‚Ä¢ <b>App ID:</b> <code>%s</code>\n", bot.Escape(info.AppID)))

	if info.BundleID != "" {
		b.WriteString(fmt.Sprintf("‚Ä¢ <b>Bundle ID:</b> <code>%s</code>\n", bot.Escape(info.BundleID)))
	}

	if !info.ReleasedAt.IsZero() {
		b.WriteString(fmt.Sprintf("‚Ä¢ <b>–î–∞—Ç–∞ —Ä–µ–ª–∏–∑–∞:</b> %s\n",
			bot.Escape(info.ReleasedAt.Format("02.01.2006 15:04"))))
	}

	return b.String()
}
