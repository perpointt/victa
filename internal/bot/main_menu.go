package bot

import (
	"fmt"
	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
	"victa/internal/domain"
)

// BuildMainMenu –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é, –ø–æ–∫–∞–∑—ã–≤–∞—è ¬´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏¬ª –∏ ¬´–ö–æ–º–ø–∞–Ω–∏–∏¬ª —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—É
func (b *Bot) BuildMainMenu(chatID int64, user *domain.User) *tgbotapi.MessageConfig {
	isAdmin := user.TgId == b.config.TelegramAdminUserId
	// –ø–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—É—é –∞–∫—Ç–∏–≤–Ω—É—é –∫–æ–º–ø–∞–Ω–∏—é
	settings, err := b.UserSettingsSvc.FindByUserID(user.ID)
	if err != nil {
		return nil
	}

	var activeCompany string
	if settings.ActiveCompanyId != nil {
		activeCompany = fmt.Sprintf("%d", *settings.ActiveCompanyId)
	} else {
		activeCompany = "–ù–µ—Ç –∫–æ–º–ø–∞–Ω–∏–∏"
	}

	text := fmt.Sprintf(
		"–ü—Ä–∏–≤–µ—Ç, *%s*!\n\n*–ê–∫—Ç–∏–≤–Ω–∞—è –∫–æ–º–ø–∞–Ω–∏—è:* _%s_",
		user.Name, activeCompany,
	)

	// –°–±–æ—Ä–∫–∞ —Å—Ç—Ä–æ–∫ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã
	var rows [][]tgbotapi.InlineKeyboardButton

	// –í—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è", "menu_apps"),
	))

	// –¢–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
	if isAdmin {
		rows = append(rows,
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "menu_users"),
			),
			tgbotapi.NewInlineKeyboardRow(
				tgbotapi.NewInlineKeyboardButtonData("üè¢ –ö–æ–º–ø–∞–Ω–∏–∏", "company_list"),
			),
		)
	}

	// –í—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–æ
	rows = append(rows, tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏", "menu_settings"),
	))

	keyboard := tgbotapi.NewInlineKeyboardMarkup(rows...)

	// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ —É—Ç–∏–ª–∏—Ç—ã
	msg := b.newKeyboardMessage(chatID, text, keyboard)
	return &msg
}
